(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("lodash"));
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["qr-lib"] = factory(require("lodash"));
	else
		root["qr"] = factory(root["_"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_lodash__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/CodePoint.ts":
/*!**************************!*\
  !*** ./lib/CodePoint.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CodePoint = /** @class */ (function () {\r\n    function CodePoint(codePoint) {\r\n        this.utf16_char = codePoint;\r\n        this.utf8_code = CodePoint.toUTF8Array(codePoint);\r\n    }\r\n    // source: https://gist.github.com/joni/3760795#file-toutf8array-js\r\n    CodePoint.toUTF8Array = function (str) {\r\n        var utf8 = [];\r\n        for (var i = 0; i < str.length; i++) {\r\n            var char_code = str.charCodeAt(i);\r\n            if (char_code < 0x80)\r\n                utf8.push(char_code);\r\n            else if (char_code < 0x800) {\r\n                utf8.push(0xc0 | (char_code >> 6), 0x80 | (char_code & 0x3f));\r\n            }\r\n            else if (char_code < 0xd800 || char_code >= 0xe000) {\r\n                utf8.push(0xe0 | (char_code >> 12), 0x80 | ((char_code >> 6) & 0x3f), 0x80 | (char_code & 0x3f));\r\n            }\r\n            // surrogate pair\r\n            else {\r\n                char_code = ((char_code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff) + 0x010000;\r\n                utf8.push(0xf0 | (char_code >> 18), 0x80 | ((char_code >> 12) & 0x3f), 0x80 | ((char_code >> 6) & 0x3f), 0x80 | (char_code & 0x3f));\r\n            }\r\n        }\r\n        return utf8;\r\n    };\r\n    CodePoint.prototype.getChar = function () { return this.utf16_char; };\r\n    CodePoint.prototype.getCode = function () { return this.utf8_code; };\r\n    return CodePoint;\r\n}());\r\nexports.default = CodePoint;\r\n\n\n//# sourceURL=webpack://qr/./lib/CodePoint.ts?");

/***/ }),

/***/ "./lib/Codeword.ts":
/*!*************************!*\
  !*** ./lib/Codeword.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EcCodeword = exports.DataCodeword = exports.Codeword = void 0;\r\nvar Codeword = /** @class */ (function () {\r\n    function Codeword(value) {\r\n        this.pre_interleave_index = -1;\r\n        this.block_index = -1;\r\n        this.index = -1;\r\n        this.post_interleave_index = -1;\r\n        if (value < 0 || value >= 255)\r\n            throw Error(\"Invalid Value\");\r\n        this.value = value;\r\n    }\r\n    Codeword.prototype.setBlockIndex = function (value) { this.block_index = value; };\r\n    Codeword.prototype.setIndex = function (value) { this.index = value; };\r\n    Codeword.prototype.setPreInterleaveIndex = function (value) { this.pre_interleave_index = value; };\r\n    Codeword.prototype.setPostInterleaveIndex = function (value) { this.post_interleave_index = value; };\r\n    Codeword.prototype.getValue = function () { return this.value; };\r\n    return Codeword;\r\n}());\r\nexports.Codeword = Codeword;\r\nvar DataCodeword = /** @class */ (function (_super) {\r\n    __extends(DataCodeword, _super);\r\n    function DataCodeword(value) {\r\n        var _this = _super.call(this, value) || this;\r\n        _this.pre_ec_index = -1;\r\n        return _this;\r\n    }\r\n    DataCodeword.prototype.setPreEcIndex = function (n) { this.pre_ec_index = n; };\r\n    return DataCodeword;\r\n}(Codeword));\r\nexports.DataCodeword = DataCodeword;\r\nvar EcCodeword = /** @class */ (function (_super) {\r\n    __extends(EcCodeword, _super);\r\n    function EcCodeword(value) {\r\n        return _super.call(this, value) || this;\r\n    }\r\n    return EcCodeword;\r\n}(Codeword));\r\nexports.EcCodeword = EcCodeword;\r\n\n\n//# sourceURL=webpack://qr/./lib/Codeword.ts?");

/***/ }),

/***/ "./lib/Module.ts":
/*!***********************!*\
  !*** ./lib/Module.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QuietModule = exports.MaskModule = exports.FunctionalModule = exports.DataModule = exports.Module = void 0;\r\nvar Module = /** @class */ (function () {\r\n    function Module() {\r\n        this.color = false;\r\n    }\r\n    Module.prototype.setColor = function (value) { this.color = value; };\r\n    Module.prototype.getColor = function () { return this.color; };\r\n    return Module;\r\n}());\r\nexports.Module = Module;\r\nvar DataModule = /** @class */ (function (_super) {\r\n    __extends(DataModule, _super);\r\n    function DataModule() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return DataModule;\r\n}(Module));\r\nexports.DataModule = DataModule;\r\nvar FunctionalModule = /** @class */ (function (_super) {\r\n    __extends(FunctionalModule, _super);\r\n    function FunctionalModule(type, color) {\r\n        var _this = _super.call(this) || this;\r\n        _this.color = color;\r\n        _this.type = type;\r\n        return _this;\r\n    }\r\n    FunctionalModule.prototype.getType = function () { return this.type; };\r\n    return FunctionalModule;\r\n}(Module));\r\nexports.FunctionalModule = FunctionalModule;\r\nvar MaskModule = /** @class */ (function (_super) {\r\n    __extends(MaskModule, _super);\r\n    function MaskModule(color) {\r\n        var _this = _super.call(this) || this;\r\n        _this.color = color;\r\n        return _this;\r\n    }\r\n    return MaskModule;\r\n}(Module));\r\nexports.MaskModule = MaskModule;\r\nvar QuietModule = /** @class */ (function (_super) {\r\n    __extends(QuietModule, _super);\r\n    function QuietModule() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return QuietModule;\r\n}(Module));\r\nexports.QuietModule = QuietModule;\r\n\n\n//# sourceURL=webpack://qr/./lib/Module.ts?");

/***/ }),

/***/ "./lib/QR.ts":
/*!*******************!*\
  !*** ./lib/QR.ts ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar constants = __importStar(__webpack_require__(/*! ./constants */ \"./lib/constants.ts\"));\r\nvar Module_1 = __webpack_require__(/*! ./Module */ \"./lib/Module.ts\");\r\nvar ecls;\r\n(function (ecls) {\r\n    ecls[ecls[\"LOW\"] = 0] = \"LOW\";\r\n    ecls[ecls[\"MEDIUM\"] = 1] = \"MEDIUM\";\r\n    ecls[ecls[\"QUARTILE\"] = 2] = \"QUARTILE\";\r\n    ecls[ecls[\"HIGH\"] = 3] = \"HIGH\";\r\n})(ecls || (ecls = {}));\r\nvar QR = /** @class */ (function () {\r\n    function QR(version, ecl) {\r\n        this.modules = [];\r\n        this.version = version;\r\n        this.ecl = ecl;\r\n        this.size = version * 4 + 17;\r\n        for (var i = 0; i < this.size; i++) {\r\n            var row = [];\r\n            for (var j = 0; j < this.size; j++)\r\n                row.push(new Module_1.Module());\r\n            this.modules.push(row);\r\n        }\r\n    }\r\n    QR.getBitAt = function (bits, index) {\r\n        return (bits >>> index) & 1;\r\n    };\r\n    QR.prototype.getVersion = function () { return this.version; };\r\n    QR.prototype.getEcl = function () { return this.ecl; };\r\n    QR.prototype.getSize = function () { return this.size; };\r\n    QR.prototype.getModules = function () { return this.modules; };\r\n    QR.prototype.toString = function () {\r\n        return this.modules.map(function (row) { return row.map(function (module) { return module.getColor() ? 1 : 0; }).join(\" \"); }).join(\"\\n\");\r\n    };\r\n    QR.prototype.initialize = function () {\r\n        this.drawTimingPatterns();\r\n        this.drawFinderPatterns();\r\n        this.drawSeparatorPatterns();\r\n        this.drawAlignmentPatterns();\r\n        this.drawDarkPattern();\r\n        this.drawFormatPatterns();\r\n        this.drawVersionInfoPatterns();\r\n    };\r\n    QR.prototype.drawTimingPatterns = function () {\r\n        for (var i = 0; i < this.size; i++) {\r\n            var color = i % 2 == 0;\r\n            // row 6\r\n            this.modules[6][i] = new Module_1.FunctionalModule(\"TIMING\", color);\r\n            // column 6\r\n            this.modules[i][6] = new Module_1.FunctionalModule(\"TIMING\", color);\r\n        }\r\n    };\r\n    QR.prototype.drawFinderPatterns = function () {\r\n        var pos = [\r\n            // Top-left, Bottom-left, Top-Right\r\n            [0, 0], [this.size - 7, 0], [0, this.size - 7]\r\n        ];\r\n        for (var _i = 0, pos_1 = pos; _i < pos_1.length; _i++) {\r\n            var _a = pos_1[_i], x = _a[0], y = _a[1];\r\n            for (var i = 0; i < 7; i++) {\r\n                for (var j = 0; j < 7; j++) {\r\n                    if (i == 0 || i == 6)\r\n                        this.modules[x + i][y + j] = new Module_1.FunctionalModule(\"FINDER\", true);\r\n                    else if (i == 1 || i == 5)\r\n                        this.modules[x + i][y + j] = new Module_1.FunctionalModule(\"FINDER\", !(j != 0 && j != 6));\r\n                    else\r\n                        this.modules[x + i][y + j] = new Module_1.FunctionalModule(\"FINDER\", (j != 1 && j != 5));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    QR.prototype.drawSeparatorPatterns = function () {\r\n        var pos1 = [\r\n            // row placed\r\n            [7, 0], [7, this.size - 8], [this.size - 8, 0]\r\n        ];\r\n        var pos2 = [\r\n            // column placed\r\n            [0, 7], [0, this.size - 8], [this.size - 8, 7]\r\n        ];\r\n        for (var _i = 0, pos1_1 = pos1; _i < pos1_1.length; _i++) {\r\n            var _a = pos1_1[_i], x = _a[0], y = _a[1];\r\n            for (var i = 0; i < 8; i++)\r\n                this.modules[x][y + i] = new Module_1.FunctionalModule(\"SEPARATOR\", false);\r\n        }\r\n        for (var _b = 0, pos2_1 = pos2; _b < pos2_1.length; _b++) {\r\n            var _c = pos2_1[_b], x = _c[0], y = _c[1];\r\n            for (var i = 0; i < 8; i++)\r\n                this.modules[x + i][y] = new Module_1.FunctionalModule(\"SEPARATOR\", false);\r\n        }\r\n    };\r\n    QR.prototype.drawAlignmentPatterns = function () {\r\n        if (this.version == 1)\r\n            return;\r\n        var p = constants.ALIGNMENT_POSITION[this.version];\r\n        // combine row and column position\r\n        for (var _i = 0, p_1 = p; _i < p_1.length; _i++) {\r\n            var x = p_1[_i];\r\n            for (var _a = 0, p_2 = p; _a < p_2.length; _a++) {\r\n                var y = p_2[_a];\r\n                var module_1 = this.modules[x][y];\r\n                if (module_1 instanceof Module_1.FunctionalModule && module_1.getType() != \"TIMING\")\r\n                    continue;\r\n                var pos = [x - 2, y - 2];\r\n                for (var i = 0; i < 5; i++) {\r\n                    for (var j = 0; j < 5; j++) {\r\n                        var px = pos[0] + i, py = pos[1] + j;\r\n                        if (i == 0 || i == 4)\r\n                            this.modules[px][py] = new Module_1.FunctionalModule(\"ALIGNMENT\", true);\r\n                        else if (i == 1 || i == 3)\r\n                            this.modules[px][py] = new Module_1.FunctionalModule(\"ALIGNMENT\", !(j != 0 && j != 4));\r\n                        else\r\n                            this.modules[px][py] = new Module_1.FunctionalModule(\"ALIGNMENT\", (j != 1 && j != 3));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    QR.prototype.drawDarkPattern = function () {\r\n        this.modules[this.version * 4 + 9][8] = new Module_1.FunctionalModule(\"Dark\", true);\r\n    };\r\n    QR.prototype.drawFormatPatterns = function (mask) {\r\n        var bits = (mask != undefined) ? constants.FORMAT_INFO[ecls[this.ecl]][mask] : 0;\r\n        for (var i = 0; i < 8; i++) {\r\n            var color = QR.getBitAt(bits, i) != 0;\r\n            this.modules[8][this.size - i - 1] = new Module_1.FunctionalModule(\"FORMAT_INFO\", color);\r\n            this.modules[(i < 6) ? i : i + 1][8] = new Module_1.FunctionalModule(\"FORMAT_INFO\", color);\r\n        }\r\n        for (var i = 0; i < 7; i++) {\r\n            var color = QR.getBitAt(bits, i + 8) != 0;\r\n            this.modules[8][(i >= 1) ? 6 - i : 7 - i] = new Module_1.FunctionalModule(\"FORMAT_INFO\", color);\r\n            this.modules[this.size + i - 7][8] = new Module_1.FunctionalModule(\"FORMAT_INFO\", color);\r\n        }\r\n    };\r\n    QR.prototype.drawVersionInfoPatterns = function () {\r\n        if (this.version < 7)\r\n            return;\r\n        var bits = constants.VERSION_INFO[this.version - 7];\r\n        for (var i = 0; i < 18; i++) {\r\n            var x = Math.floor(i / 3), y = this.size - 11 + i % 3, color = QR.getBitAt(bits, i) != 0;\r\n            this.modules[x][y] = new Module_1.FunctionalModule(\"VERSION_INFO\", color);\r\n            this.modules[y][x] = new Module_1.FunctionalModule(\"VERSION_INFO\", color);\r\n        }\r\n    };\r\n    QR.prototype.generateDataPath = function () {\r\n        var result = [];\r\n        for (var col = this.size - 1; col > 0; col -= 2) {\r\n            if (col == 6)\r\n                col = 5; // Skip the vertical Timing Pattern\r\n            for (var row = 0; row < this.size; row++) {\r\n                for (var i = 0; i < 2; i++) {\r\n                    var upward = ((col + 1) & 2) == 0;\r\n                    var x = upward ? this.size - row - 1 : row;\r\n                    var y = col - i;\r\n                    if (this.modules[x][y] instanceof Module_1.FunctionalModule)\r\n                        continue;\r\n                    result.push([x, y]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    QR.prototype.placeCodeword = function (data, path) {\r\n        var _this = this;\r\n        path.forEach(function (_a, index) {\r\n            var x = _a[0], y = _a[1];\r\n            var module = new Module_1.DataModule();\r\n            if (index < data.length * 8) {\r\n                var codeword = data[index >>> 3];\r\n                module.setColor(QR.getBitAt(codeword.getValue(), 7 - (index & 7)) != 0);\r\n                index++;\r\n            }\r\n            else\r\n                module.setColor(false);\r\n            _this.modules[x][y] = module;\r\n        });\r\n    };\r\n    QR.prototype.generateMask = function (which) {\r\n        var result = new QR(this.version, this.ecl);\r\n        for (var row = 0; row < this.size; row++) {\r\n            for (var col = 0; col < this.size; col++) {\r\n                var color = void 0;\r\n                switch (which) {\r\n                    case 0:\r\n                        color = (row + col) % 2 == 0;\r\n                        break;\r\n                    case 1:\r\n                        color = row % 2 == 0;\r\n                        break;\r\n                    case 2:\r\n                        color = col % 3 == 0;\r\n                        break;\r\n                    case 3:\r\n                        color = (row + col) % 3 == 0;\r\n                        break;\r\n                    case 4:\r\n                        color = (Math.floor(row / 2) + Math.floor(col / 3)) % 2 == 0;\r\n                        break;\r\n                    case 5:\r\n                        color = (row * col) % 2 + (row * col) % 3 == 0;\r\n                        break;\r\n                    case 6:\r\n                        color = ((row * col) % 2 + (row * col) % 3) % 2 == 0;\r\n                        break;\r\n                    case 7:\r\n                        color = ((row + col) % 2 + (row * col) % 3) % 2 == 0;\r\n                        break;\r\n                    default: throw Error(\"Value Error\");\r\n                }\r\n                if ((this.modules[row][col] instanceof Module_1.FunctionalModule))\r\n                    continue;\r\n                result.modules[row][col] = new Module_1.MaskModule(color);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    QR.prototype.generateAllMasks = function () {\r\n        var result = [];\r\n        for (var i = 0; i < 8; i++)\r\n            result.push(this.generateMask(i));\r\n        return result;\r\n    };\r\n    QR.prototype.applyMask = function (mask) {\r\n        for (var row = 0; row < this.size; row++) {\r\n            for (var col = 0; col < this.size; col++) {\r\n                var m = mask.modules[row][col];\r\n                var original = this.modules[row][col];\r\n                if (original instanceof Module_1.DataModule && m instanceof Module_1.MaskModule)\r\n                    original.setColor(original.getColor() != m.getColor());\r\n            }\r\n        }\r\n    };\r\n    QR.prototype.computePenalty = function () {\r\n        var dark = 0, p1 = 0, p2 = 0, p3 = 0, p4;\r\n        var sim1 = [true, false, true, true, true, false, true, false, false, false, false], sim2 = [false, false, false, false, true, false, true, true, true, false, true], r1 = function (result, curr, index) { return result && (curr == sim1[index]); }, r2 = function (result, curr, index) { return result && (curr == sim2[index]); };\r\n        for (var i = 0; i < this.size; i++) {\r\n            // Step 1: penalties for each group of 5 or more same-colored module\r\n            var row_flag = true, col_flag = true, row_counter = 0, col_counter = 0;\r\n            var row_queue = [], col_queue = [];\r\n            for (var j = 0; j < this.size; j++) {\r\n                // scan each row\r\n                var row_color = this.modules[i][j].getColor();\r\n                row_queue.push(row_color);\r\n                // scan each column\r\n                var col_color = this.modules[j][i].getColor();\r\n                col_queue.push(col_color);\r\n                // count the number of dark modules\r\n                if (row_color)\r\n                    dark++;\r\n                // row scanning switch color\r\n                if (row_color != row_flag) {\r\n                    row_flag = row_color;\r\n                    if (row_counter >= 5)\r\n                        p1 += constants.PENALTIES.S1 + row_counter - 5;\r\n                    row_counter = 1;\r\n                }\r\n                else\r\n                    row_counter++; // stays the same\r\n                // column scanning switch color\r\n                if (col_color != col_flag) {\r\n                    col_flag = col_color;\r\n                    if (col_counter >= 5)\r\n                        p1 += constants.PENALTIES.S1 + col_counter - 5;\r\n                    col_counter = 1;\r\n                }\r\n                else\r\n                    col_counter++; // stays the same\r\n                // encounter last module for each row/column\r\n                if (j == this.size - 1) {\r\n                    if (row_counter >= 5)\r\n                        p1 += constants.PENALTIES.S1 + row_counter - 5;\r\n                    if (col_counter >= 5)\r\n                        p1 += constants.PENALTIES.S1 + col_counter - 5;\r\n                }\r\n                else if (i != this.size - 1) {\r\n                    // Step 2: penalties for each 2 * 2 area of same-colored module\r\n                    var x = this.modules[i][j + 1].getColor(), y = this.modules[i + 1][j].getColor(), z = this.modules[i + 1][j + 1].getColor();\r\n                    if (row_color == x && y == z && x == y)\r\n                        p2 += constants.PENALTIES.S2;\r\n                }\r\n                // Step 3: penalties for patterns that look similar to finder patterns\r\n                if (row_queue.length == sim1.length) { // same boolean value for column queue\r\n                    var a_1 = row_queue.reduce(r1, true), b_1 = row_queue.reduce(r2, true), c = col_queue.reduce(r1, true), d = col_queue.reduce(r2, true);\r\n                    if (a_1)\r\n                        p3 += constants.PENALTIES.S3;\r\n                    if (b_1)\r\n                        p3 += constants.PENALTIES.S3;\r\n                    if (c)\r\n                        p3 += constants.PENALTIES.S3;\r\n                    if (d)\r\n                        p3 += constants.PENALTIES.S3;\r\n                    row_queue.splice(0, 1);\r\n                    col_queue.splice(0, 1);\r\n                }\r\n            }\r\n        }\r\n        // Step 4: penalties for unbalanced white-black ratio\r\n        var ratio = parseInt(((dark / Math.pow(this.size, 2)) * 100).toFixed());\r\n        var a = 0, b = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            var prev = ratio - i, next = ratio + i;\r\n            if (prev % 5 == 0)\r\n                a = prev;\r\n            if (next % 5 == 0)\r\n                b = next;\r\n        }\r\n        p4 = Math.min(Math.abs(a - 50), Math.abs(b - 50)) * constants.PENALTIES.S4;\r\n        return p1 + p2 + p3 + p4;\r\n    };\r\n    QR.prototype.generateQuietRows = function () {\r\n        var result = [];\r\n        for (var i = 0; i < 4; i++) {\r\n            var row = [];\r\n            for (var j = 0; j < this.size + 8; j++)\r\n                row.push(new Module_1.QuietModule());\r\n            result.push(row);\r\n        }\r\n        return result;\r\n    };\r\n    QR.prototype.extend = function () {\r\n        var pre = this.generateQuietRows();\r\n        for (var i = 0; i < this.size; i++) {\r\n            var row = [];\r\n            for (var j = -4; j < this.size + 4; j++)\r\n                (j < 0 || j > this.size - 1) ? row.push(new Module_1.QuietModule()) : row.push(this.modules[i][j]);\r\n            pre.push(row);\r\n        }\r\n        this.modules = pre.concat(this.generateQuietRows());\r\n    };\r\n    return QR;\r\n}());\r\nexports.default = QR;\r\n\n\n//# sourceURL=webpack://qr/./lib/QR.ts?");

/***/ }),

/***/ "./lib/RSECG.ts":
/*!**********************!*\
  !*** ./lib/RSECG.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// source: https://github.com/nayuki/Nayuki-web-published-code/blob/master/creating-a-qr-code-step-by-step/instrumented-qrcodegen.ts#L525\r\nvar RSECG = /** @class */ (function () {\r\n    function RSECG(degree) {\r\n        this.coefficients = [];\r\n        if (degree < 1 || degree > 255)\r\n            throw Error(\"Degree out of range\");\r\n        var coefs = this.coefficients;\r\n        for (var i = 0; i < degree - 1; i++)\r\n            coefs.push(0);\r\n        coefs.push(1);\r\n        var root = 1;\r\n        for (var i = 0; i < degree; i++) {\r\n            for (var j = 0; j < coefs.length; j++) {\r\n                coefs[j] = RSECG.multiply(coefs[j], root);\r\n                if (j + 1 < coefs.length)\r\n                    coefs[j] ^= coefs[j + 1];\r\n            }\r\n            root = RSECG.multiply(root, 0x02);\r\n        }\r\n    }\r\n    RSECG.multiply = function (a, b) {\r\n        if (a >>> 8 != 0 || b >>> 8 != 0)\r\n            throw Error(\"Invalid bytes\");\r\n        var n = 0;\r\n        for (var i = 7; i >= 0; i--) {\r\n            n = (n << 1) ^ ((n >>> 7) * 0x11D);\r\n            n ^= ((b >>> i) & 1) * a;\r\n        }\r\n        if (n >>> 8 != 0)\r\n            throw Error(\"Calculation error\");\r\n        return n;\r\n    };\r\n    RSECG.prototype.getRemainder = function (data) {\r\n        var result = this.coefficients.map(function (_) { return 0; });\r\n        var _loop_1 = function (byte) {\r\n            var f = byte ^ result.shift();\r\n            result.push(0);\r\n            this_1.coefficients.forEach(function (coefficient, index) {\r\n                result[index] ^= RSECG.multiply(coefficient, f);\r\n            });\r\n        };\r\n        var this_1 = this;\r\n        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n            var byte = data_1[_i];\r\n            _loop_1(byte);\r\n        }\r\n        return result;\r\n    };\r\n    return RSECG;\r\n}());\r\nexports.default = RSECG;\r\n\n\n//# sourceURL=webpack://qr/./lib/RSECG.ts?");

/***/ }),

/***/ "./lib/Segment.ts":
/*!************************!*\
  !*** ./lib/Segment.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Segment = /** @class */ (function () {\r\n    function Segment(mode, len, bits) {\r\n        this.mode = mode;\r\n        this.char_len = len;\r\n        this.data = bits;\r\n    }\r\n    Segment.prototype.getMode = function () { return this.mode; };\r\n    Segment.prototype.getCharLen = function () { return this.char_len; };\r\n    Segment.prototype.getData = function () { return this.data; };\r\n    return Segment;\r\n}());\r\nexports.default = Segment;\r\n\n\n//# sourceURL=webpack://qr/./lib/Segment.ts?");

/***/ }),

/***/ "./lib/constants.ts":
/*!**************************!*\
  !*** ./lib/constants.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PENALTIES = exports.VERSION_INFO = exports.FORMAT_INFO = exports.NUM_EC_BLOCK = exports.EC_CODEWORD_PER_BLOCK = exports.ALIGNMENT_POSITION = exports.CAPACITY = exports.ALPHANUMERIC = exports.NUMERIC = exports.MODE = exports.ECL = void 0;\r\nvar ECL = {\r\n    LOW: {\r\n        ordinal: 0,\r\n        format: 1\r\n    },\r\n    MEDIUM: {\r\n        ordinal: 1,\r\n        format: 0\r\n    },\r\n    QUARTILE: {\r\n        ordinal: 2,\r\n        format: 3\r\n    },\r\n    HIGH: {\r\n        ordinal: 3,\r\n        format: 2\r\n    }\r\n};\r\nexports.ECL = ECL;\r\nvar MODE = {\r\n    NUMERIC: {\r\n        indicator: 0x1,\r\n        charCount: [10, 12, 14]\r\n    },\r\n    ALPHANUMERIC: {\r\n        indicator: 0x2,\r\n        charCount: [9, 11, 13]\r\n    },\r\n    BYTE: {\r\n        indicator: 0x4,\r\n        charCount: [8, 16, 16]\r\n    },\r\n    KANJI: {\r\n        indicator: 0x8,\r\n        charCount: [8, 10, 12]\r\n    },\r\n};\r\nexports.MODE = MODE;\r\nvar NUMERIC = \"0123456789\";\r\nexports.NUMERIC = NUMERIC;\r\nvar ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\r\nexports.ALPHANUMERIC = ALPHANUMERIC;\r\n// Fixed capacity for each version and error correction level, calculation omitted\r\nvar CAPACITY = [\r\n    // L, M, Q, H - Error correction level\r\n    [-1, -1, -1, -1],\r\n    [19, 16, 13, 9],\r\n    [34, 28, 22, 16],\r\n    [55, 44, 34, 26],\r\n    [80, 64, 48, 36],\r\n    [108, 86, 62, 46],\r\n    [136, 108, 76, 60],\r\n    [156, 124, 88, 66],\r\n    [194, 154, 110, 86],\r\n    [232, 182, 132, 100],\r\n    [274, 216, 154, 122],\r\n    [324, 254, 180, 140],\r\n    [370, 290, 206, 158],\r\n    [428, 334, 244, 180],\r\n    [461, 365, 261, 197],\r\n    [523, 415, 295, 223],\r\n    [589, 453, 325, 253],\r\n    [647, 507, 367, 283],\r\n    [721, 563, 397, 313],\r\n    [795, 627, 445, 341],\r\n    [861, 669, 485, 385],\r\n    [932, 714, 512, 406],\r\n    [1006, 782, 568, 442],\r\n    [1094, 860, 614, 464],\r\n    [1174, 914, 664, 514],\r\n    [1276, 1000, 718, 538],\r\n    [1370, 1062, 754, 596],\r\n    [1468, 1128, 808, 628],\r\n    [1531, 1193, 871, 661],\r\n    [1631, 1267, 911, 701],\r\n    [1735, 1373, 985, 745],\r\n    [1843, 1455, 1033, 793],\r\n    [1955, 1541, 1115, 845],\r\n    [2071, 1631, 1171, 901],\r\n    [2191, 1725, 1231, 961],\r\n    [2306, 1812, 1286, 986],\r\n    [2434, 1914, 1354, 1054],\r\n    [2566, 1992, 1426, 1096],\r\n    [2702, 2102, 1502, 1142],\r\n    [2812, 2216, 1582, 1222],\r\n    [2956, 2334, 1666, 1276],\r\n];\r\nexports.CAPACITY = CAPACITY;\r\nvar EC_CODEWORD_PER_BLOCK = [\r\n    // [Error correction level: [Versions]]\r\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24,\r\n        28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28,\r\n        28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\r\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24,\r\n        28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30,\r\n        28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n];\r\nexports.EC_CODEWORD_PER_BLOCK = EC_CODEWORD_PER_BLOCK;\r\nvar NUM_EC_BLOCK = [\r\n    // [Error correction level: [Versions]]\r\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7,\r\n        8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\r\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14,\r\n        16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\r\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21,\r\n        20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\r\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25,\r\n        25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81],\r\n];\r\nexports.NUM_EC_BLOCK = NUM_EC_BLOCK;\r\n// Fixed positions for alignment modules, calculation omitted\r\nvar ALIGNMENT_POSITION = [\r\n    [-1],\r\n    [-1],\r\n    [6, 18],\r\n    [6, 22],\r\n    [6, 26],\r\n    [6, 30],\r\n    [6, 34],\r\n    [6, 22, 38],\r\n    [6, 24, 42],\r\n    [6, 26, 46],\r\n    [6, 28, 50],\r\n    [6, 30, 54],\r\n    [6, 32, 58],\r\n    [6, 34, 62],\r\n    [6, 26, 46, 66],\r\n    [6, 26, 48, 70],\r\n    [6, 26, 50, 74],\r\n    [6, 30, 54, 78],\r\n    [6, 30, 56, 82],\r\n    [6, 30, 58, 86],\r\n    [6, 34, 62, 90],\r\n    [6, 28, 50, 72, 94],\r\n    [6, 26, 50, 74, 98],\r\n    [6, 30, 54, 78, 102],\r\n    [6, 28, 54, 80, 106],\r\n    [6, 32, 58, 84, 110],\r\n    [6, 30, 58, 86, 114],\r\n    [6, 34, 62, 90, 118],\r\n    [6, 26, 50, 74, 98, 122],\r\n    [6, 30, 54, 78, 102, 126],\r\n    [6, 26, 52, 78, 104, 130],\r\n    [6, 30, 56, 82, 108, 134],\r\n    [6, 34, 60, 86, 112, 138],\r\n    [6, 30, 58, 86, 114, 142],\r\n    [6, 34, 62, 90, 118, 146],\r\n    [6, 30, 54, 78, 102, 126, 150],\r\n    [6, 24, 50, 76, 102, 128, 154],\r\n    [6, 28, 54, 80, 106, 132, 158],\r\n    [6, 32, 58, 84, 110, 136, 162],\r\n    [6, 26, 54, 82, 110, 138, 166],\r\n    [6, 30, 58, 86, 114, 142, 170],\r\n];\r\nexports.ALIGNMENT_POSITION = ALIGNMENT_POSITION;\r\n// Fixed format info bits, calculation omitted\r\nvar FORMAT_INFO = [\r\n    // [Error correction level: [Masks]]\r\n    [30660, 29427, 32170, 30877,\r\n        26159, 25368, 27713, 26998],\r\n    [21522, 20773, 24188, 23371,\r\n        17913, 16590, 20375, 19104],\r\n    [13663, 12392, 16177, 14854,\r\n        9396, 8579, 11994, 11245],\r\n    [5769, 5054, 7399, 6608,\r\n        1890, 597, 3340, 2107] // HIGH\r\n];\r\nexports.FORMAT_INFO = FORMAT_INFO;\r\n// Fixed version bits, calculation omitted\r\nvar VERSION_INFO = [\r\n    31892,\r\n    34236,\r\n    39577,\r\n    42195,\r\n    48118,\r\n    51042,\r\n    55367,\r\n    58893,\r\n    63784,\r\n    68472,\r\n    70749,\r\n    76311,\r\n    79154,\r\n    84390,\r\n    87683,\r\n    92361,\r\n    96236,\r\n    102084,\r\n    102881,\r\n    110507,\r\n    110734,\r\n    117786,\r\n    119615,\r\n    126325,\r\n    127568,\r\n    133589,\r\n    136944,\r\n    141498,\r\n    145311,\r\n    150283,\r\n    152622,\r\n    158308,\r\n    161089,\r\n    167017,\r\n];\r\nexports.VERSION_INFO = VERSION_INFO;\r\nvar PENALTIES = {\r\n    S1: 3,\r\n    S2: 3,\r\n    S3: 40,\r\n    S4: 10\r\n};\r\nexports.PENALTIES = PENALTIES;\r\n\n\n//# sourceURL=webpack://qr/./lib/constants.ts?");

/***/ }),

/***/ "./lib/index.ts":
/*!**********************!*\
  !*** ./lib/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.app = void 0;\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./lib/utils.ts\");\r\nvar app;\r\n(function (app) {\r\n    function debug(str) {\r\n        console.log(\"DEBUG: \" + str);\r\n    }\r\n    app.debug = debug;\r\n    function generate(text, version, ecl, forced, mask) {\r\n        if (!(typeof text == \"string\") || text.length === 0)\r\n            throw Error(\"Invalid Input\");\r\n        if (version < 1 || version > 40)\r\n            throw Error(\"Invalid Version\");\r\n        // TODO: type checking for ecl\r\n        if (!(typeof forced == \"boolean\"))\r\n            throw Error(\"Invalid Forced Value\");\r\n        if (mask < -1 || mask > 7)\r\n            throw Error(\"Invalid Mask\");\r\n        var codePoints = utils_1.utils.generateCodePoint(text);\r\n        var isNumeric = true, isAlphanumeric = true;\r\n        codePoints.forEach(function (codePoint) {\r\n            isNumeric = isNumeric && utils_1.utils.isNumeric(codePoint.getChar());\r\n            isAlphanumeric = isAlphanumeric && utils_1.utils.isAlphanumeric(codePoint.getChar());\r\n        });\r\n        var mode = (isNumeric) ? \"NUMERIC\" : (isAlphanumeric) ? \"ALPHANUMERIC\" : \"BYTE\", segments = [utils_1.utils.generateSegmentFromSingleMode(codePoints, mode)], optimalVersion = utils_1.utils.computeOptimalVersion(segments, version, ecl, forced), dataCodeword = utils_1.utils.generateDataCodeword(segments, optimalVersion, ecl), codeword = utils_1.utils.generateCodeword(dataCodeword, optimalVersion, ecl), code = utils_1.utils.generateRawQR(codeword, optimalVersion, ecl), optimalMask = (mask == -1) ? utils_1.utils.computeOptimalMask(code) : [mask, code.generateMask(mask)];\r\n        utils_1.utils.generateQR(code, optimalMask);\r\n        code.extend(); // Changeable\r\n        var output = document.createElement(\"canvas\"), context = output.getContext(\"2d\"), numBlock = code.getSize() + 8, size = 10; // Changeable\r\n        output.id = \"output\";\r\n        output.width = numBlock * size;\r\n        output.height = numBlock * size;\r\n        var modules = code.getModules();\r\n        for (var row = 0; row < numBlock; row++) {\r\n            for (var col = 0; col < numBlock; col++) {\r\n                context.fillStyle = (modules[row][col].getColor()) ? \"#000000\" : \"#FFFFFF\"; // Changeable\r\n                context.fillRect(col * size, row * size, size, size);\r\n            }\r\n        }\r\n        context.stroke();\r\n        return output;\r\n    }\r\n    app.generate = generate;\r\n})(app = exports.app || (exports.app = {}));\r\n\n\n//# sourceURL=webpack://qr/./lib/index.ts?");

/***/ }),

/***/ "./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.utils = void 0;\r\nvar constants = __importStar(__webpack_require__(/*! ./constants */ \"./lib/constants.ts\"));\r\nvar _ = __importStar(__webpack_require__(/*! lodash */ \"lodash\"));\r\nvar Segment_1 = __importDefault(__webpack_require__(/*! ./Segment */ \"./lib/Segment.ts\"));\r\nvar CodePoint_1 = __importDefault(__webpack_require__(/*! ./CodePoint */ \"./lib/CodePoint.ts\"));\r\nvar Codeword_1 = __webpack_require__(/*! ./Codeword */ \"./lib/Codeword.ts\");\r\nvar RSECG_1 = __importDefault(__webpack_require__(/*! ./RSECG */ \"./lib/RSECG.ts\"));\r\nvar QR_1 = __importDefault(__webpack_require__(/*! ./QR */ \"./lib/QR.ts\"));\r\nvar utils;\r\n(function (utils) {\r\n    function computeModeCharCount(mode, version) {\r\n        return (0 < version && version <= 40) ? constants.MODE[mode].charCount[Math.floor((version + 7) / 17)] : -1;\r\n    }\r\n    function isAlphanumeric(char) {\r\n        return constants.ALPHANUMERIC.indexOf(char) != -1;\r\n    }\r\n    utils.isAlphanumeric = isAlphanumeric;\r\n    function isNumeric(char) {\r\n        return constants.NUMERIC.indexOf(char) != -1;\r\n    }\r\n    utils.isNumeric = isNumeric;\r\n    function decToBin(n, length) {\r\n        if (length < 0 || length > 31 || n >>> length != 0)\r\n            throw Error(\"Value Error\");\r\n        var result = [];\r\n        for (var i = length - 1; i >= 0; i--)\r\n            result.push((n >>> i) & 1);\r\n        return result;\r\n    }\r\n    function computeNumRawCodeword(version) {\r\n        var result = (16 * version + 128) * version + 64;\r\n        if (version >= 2) {\r\n            var align = Math.floor(version / 7) + 2;\r\n            result -= (25 * align - 10) * align - 55;\r\n            if (version >= 7)\r\n                result -= 36;\r\n        }\r\n        return Math.floor(result / 8);\r\n    }\r\n    function getNumEcCodeword(version, ecl) {\r\n        return constants.EC_CODEWORD_PER_BLOCK[constants.ECL[ecl].ordinal][version];\r\n    }\r\n    function getNumEcBlocks(version, ecl) {\r\n        return constants.NUM_EC_BLOCK[constants.ECL[ecl].ordinal][version];\r\n    }\r\n    function getCapacity(version, ecl) {\r\n        return constants.CAPACITY[version][constants.ECL[ecl].ordinal];\r\n    }\r\n    function computeBitsLength(segments, version) {\r\n        var result = 0;\r\n        for (var _i = 0, segments_1 = segments; _i < segments_1.length; _i++) {\r\n            var segment = segments_1[_i];\r\n            var modeCharCountBits = computeModeCharCount(segment.getMode(), version);\r\n            if (segment.getCharLen() >= (1 << modeCharCountBits))\r\n                throw Error(\"Cannot Encode\");\r\n            result += modeCharCountBits + segment.getData().length + 4;\r\n        }\r\n        return result;\r\n    }\r\n    function computeNumCodewords(segments, version) {\r\n        return Math.ceil(computeBitsLength(segments, version) / 8);\r\n    }\r\n    // Step 1\r\n    function generateCodePoint(str) {\r\n        var result = [];\r\n        for (var _i = 0, str_1 = str; _i < str_1.length; _i++) {\r\n            var codePoint = str_1[_i];\r\n            result.push(new CodePoint_1.default(codePoint));\r\n        }\r\n        return result;\r\n    }\r\n    utils.generateCodePoint = generateCodePoint;\r\n    // Step 2\r\n    function generateSegmentFromSingleMode(points, mode) {\r\n        var data = [];\r\n        var len = points.length;\r\n        points.forEach(function (point, index) {\r\n            var bits = \"\";\r\n            switch (mode) {\r\n                case \"NUMERIC\": {\r\n                    if (index % 3 == 0) {\r\n                        var n = Math.min(3, points.length - index);\r\n                        var str = points.slice(index, index + n).map(function (point) { return point.getChar(); }).join(\"\");\r\n                        bits = parseInt(str, 10).toString(2).padStart(n * 3 + 1, \"0\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ALPHANUMERIC\": {\r\n                    var t = constants.ALPHANUMERIC.indexOf(point.getChar());\r\n                    if (index % 2 == 0) {\r\n                        var n = Math.min(2, points.length - index);\r\n                        if (n == 2) {\r\n                            t = t * constants.ALPHANUMERIC.length +\r\n                                constants.ALPHANUMERIC.indexOf(points[index + 1].getChar());\r\n                        }\r\n                        bits = t.toString(2).padStart(n * 5 + 1, \"0\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"BYTE\": {\r\n                    bits = point.getCode().map(function (code) { return code.toString(2).toUpperCase().padStart(8, \"0\"); }).join(\"\");\r\n                    len += point.getCode().length - 1;\r\n                    break;\r\n                }\r\n                case \"KANJI\": {\r\n                    // TODO: implement\r\n                    break;\r\n                }\r\n                default:\r\n                    throw Error(\"Invalid encoding mode\");\r\n            }\r\n            for (var _i = 0, bits_1 = bits; _i < bits_1.length; _i++) {\r\n                var char = bits_1[_i];\r\n                data.push(parseInt(char, 2));\r\n            }\r\n        });\r\n        return new Segment_1.default(mode, len, data);\r\n    }\r\n    utils.generateSegmentFromSingleMode = generateSegmentFromSingleMode;\r\n    function generateSegmentsFromMultiModes(points, modes) {\r\n        // TODO: implement\r\n        return [];\r\n    }\r\n    utils.generateSegmentsFromMultiModes = generateSegmentsFromMultiModes;\r\n    // Step 3\r\n    function computeOptimalVersion(segments, version, ecl, forced) {\r\n        if (forced) {\r\n            var capacity = getCapacity(version, ecl), length_1 = computeNumCodewords(segments, version);\r\n            if (capacity < length_1)\r\n                throw Error(\"Cannot Encode At This Version\");\r\n            return version;\r\n        }\r\n        var result = -1;\r\n        for (var i = 1; i <= 40; i++) {\r\n            var length_2 = computeNumCodewords(segments, i);\r\n            for (var key in constants.ECL) {\r\n                if (key == ecl) {\r\n                    var capacity = getCapacity(i, ecl);\r\n                    if (length_2 <= capacity && result == -1 && i >= version) {\r\n                        result = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result == -1)\r\n            throw Error(\"Cannot Encode\");\r\n        return result;\r\n    }\r\n    utils.computeOptimalVersion = computeOptimalVersion;\r\n    // Step 4\r\n    function generateDataCodeword(segments, version, ecl) {\r\n        var result = [], bits = [], terminator = [0, 0, 0, 0], bitPad = [0, 0, 0, 0, 0, 0, 0];\r\n        segments.forEach(function (segment) {\r\n            decToBin(constants.MODE[segment.getMode()].indicator, 4).forEach(function (bit) { return bits.push(bit); });\r\n            decToBin(segment.getCharLen(), computeModeCharCount(segment.getMode(), version)).forEach(function (bit) { return bits.push(bit); });\r\n            segment.getData().forEach(function (bit) { return bits.push(bit); });\r\n        });\r\n        var capacity = getCapacity(version, ecl) * 8;\r\n        // Terminator padding\r\n        terminator.slice(0, Math.min(4, capacity - bits.length)).forEach(function (bit) { return bits.push(bit); });\r\n        // Bit padding\r\n        bitPad.slice(0, (8 - bits.length % 8) % 8).forEach(function (bit) { return bits.push(bit); });\r\n        // Byte padding\r\n        var pad = [];\r\n        for (var i = 0, n = (capacity - bits.length) / 8; i < n; i++) {\r\n            if (i % 2 == 0)\r\n                pad.push(1, 1, 1, 0, 1, 1, 0, 0);\r\n            else\r\n                pad.push(0, 0, 0, 1, 0, 0, 0, 1);\r\n        }\r\n        pad.forEach(function (bit) { return bits.push(bit); });\r\n        for (var i = 0; i < bits.length; i += 8) {\r\n            var codeword = new Codeword_1.DataCodeword(parseInt(bits.slice(i, i + 8).join(\"\"), 2));\r\n            codeword.setPreEcIndex(i / 8);\r\n            result.push(codeword);\r\n        }\r\n        return result;\r\n    }\r\n    utils.generateDataCodeword = generateDataCodeword;\r\n    function splitData(data, version, ecl) {\r\n        var num_blocks = getNumEcBlocks(version, ecl), num_ec = getNumEcCodeword(version, ecl), num_codewords = computeNumRawCodeword(version), num_short_block = num_blocks - num_codewords % num_blocks, short_block_length = Math.floor(num_codewords / num_blocks), result = [];\r\n        var _loop_1 = function (index, off) {\r\n            var end = off + short_block_length - num_ec + ((index < num_short_block) ? 0 : 1);\r\n            var block = data.slice(off, end);\r\n            block.forEach(function (dataCodeword, i) {\r\n                dataCodeword.setBlockIndex(index);\r\n                dataCodeword.setIndex(i);\r\n            });\r\n            result.push(block);\r\n            off = end;\r\n            out_off_1 = off;\r\n        };\r\n        var out_off_1;\r\n        for (var index = 0, off = 0; index < num_blocks; index++) {\r\n            _loop_1(index, off);\r\n            off = out_off_1;\r\n        }\r\n        return result;\r\n    }\r\n    function generateEcCodeword(blocks, version, ecl) {\r\n        var num_ec = getNumEcCodeword(version, ecl), short_block_length = blocks[0].length, ec = new RSECG_1.default(num_ec);\r\n        var pre_inter_leave_index = 0;\r\n        return blocks.map(function (block, index) {\r\n            for (var _i = 0, block_1 = block; _i < block_1.length; _i++) {\r\n                var dataCodeword = block_1[_i];\r\n                dataCodeword.setPreInterleaveIndex(pre_inter_leave_index);\r\n                pre_inter_leave_index++;\r\n            }\r\n            var block_bytes = block.map(function (dataCodeWord) { return dataCodeWord.getValue(); }), ec_bytes = ec.getRemainder(block_bytes);\r\n            return ec_bytes.map(function (byte, i) {\r\n                var ecCodeword = new Codeword_1.EcCodeword(byte);\r\n                ecCodeword.setPreInterleaveIndex(pre_inter_leave_index);\r\n                pre_inter_leave_index++;\r\n                ecCodeword.setBlockIndex(index);\r\n                ecCodeword.setIndex(short_block_length + 1 + i);\r\n                return ecCodeword;\r\n            });\r\n        });\r\n    }\r\n    function interleaveBlocks(data_blocks, ec_blocks) {\r\n        var ec_block_length = ec_blocks[0].length, data_block_length = data_blocks[data_blocks.length - 1].length, result = [];\r\n        var _loop_2 = function (i) {\r\n            data_blocks.forEach(function (block) {\r\n                if (i < block.length) {\r\n                    var codeword = block[i];\r\n                    codeword.setPostInterleaveIndex(result.length);\r\n                    result.push(codeword);\r\n                }\r\n            });\r\n        };\r\n        for (var i = 0; i < data_block_length; i++) {\r\n            _loop_2(i);\r\n        }\r\n        var _loop_3 = function (i) {\r\n            ec_blocks.forEach(function (block) {\r\n                var codeword = block[i];\r\n                codeword.setPostInterleaveIndex(result.length);\r\n                result.push(codeword);\r\n            });\r\n        };\r\n        for (var i = 0; i < ec_block_length; i++) {\r\n            _loop_3(i);\r\n        }\r\n        return result;\r\n    }\r\n    // Step 5\r\n    function generateCodeword(data, version, ecl) {\r\n        var data_blocks = splitData(data, version, ecl), ec_blocks = generateEcCodeword(data_blocks, version, ecl);\r\n        return interleaveBlocks(data_blocks, ec_blocks);\r\n    }\r\n    utils.generateCodeword = generateCodeword;\r\n    // Step 6\r\n    function generateRawQR(data, version, ecl) {\r\n        var qr = new QR_1.default(version, ecl);\r\n        qr.initialize();\r\n        var path = qr.generateDataPath();\r\n        qr.placeCodeword(data, path);\r\n        return qr;\r\n    }\r\n    utils.generateRawQR = generateRawQR;\r\n    // Step 7\r\n    function computeOptimalMask(qr) {\r\n        var masks = qr.generateAllMasks(), values = masks.map(function (mask, index) {\r\n            // TODO: find another way to deep copy\r\n            var copy = _.cloneDeep(qr);\r\n            copy.applyMask(mask);\r\n            copy.drawFormatPatterns(index);\r\n            return copy.computePenalty();\r\n        }), which = values.indexOf(Math.min.apply(Math, values));\r\n        return [which, masks[which]];\r\n    }\r\n    utils.computeOptimalMask = computeOptimalMask;\r\n    // Step 8\r\n    function generateQR(qr, mask) {\r\n        qr.applyMask(mask[1]);\r\n        qr.drawFormatPatterns(mask[0]);\r\n    }\r\n    utils.generateQR = generateQR;\r\n})(utils = exports.utils || (exports.utils = {}));\r\n\n\n//# sourceURL=webpack://qr/./lib/utils.ts?");

/***/ }),

/***/ "lodash":
/*!**********************************************************************!*\
  !*** external {"root":"_","commonjs":"lodash","commonjs2":"lodash"} ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;\n\n//# sourceURL=webpack://qr/external_%7B%22root%22:%22_%22,%22commonjs%22:%22lodash%22,%22commonjs2%22:%22lodash%22%7D?");

/***/ })

/******/ });
});